resources:
  - name: mark_PE_gitRepo
    type: GitRepo
    configuration:
      path: markgalpin/project-examples
      gitProvider: mark_github

  - name: mark_AF_gitRepo
    type: GitRepo
    configuration:
      path: markgalpin/automation-framework
      gitProvider: mark_github

  - name: mark_AA_gitRepo
    type: GitRepo
    configuration:
      path: markgalpin/automation-app
      gitProvider: mark_github

  - name: war_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: beta_dev
      buildName: war_build
      buildNumber: 1

  - name: old_go_gitRepo
    type: GitRepo
    configuration:
      path: avinci/swampup-go-service
      gitProvider: avinci_github

  - name: old_testRes
    type: BuildInfo
    configuration:
      sourceArtifactory: demoArt
      buildName: svc_build
      buildNumber: 1

  - name: old_svc_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: demoArt
      buildName: svc_build
      buildNumber: 1

  - name: old_svc_promoted_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: demoArt
      buildName: svc_build
      buildNumber: 1

  - name: old_backend_gitRepo
    type: GitRepo
    configuration:
      path: avinci/swampup-java-backend-service
      gitProvider: avinci_github

  - name: markg_app_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: beta_dev
      buildName: app_build
      buildNumber: 1

  - name: markg_app_promoted_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: beta_dev
      buildName: app_build
      buildNumber: 1

  - name: old_frontend_gitRepo
    type: GitRepo
    configuration:
      path: avinci/swampup-vue-frontend
      gitProvider: avinci_github

  - name: old_releaseBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: demoDist
      name: demo_rb
      version: v1.0.0

  - name: old_signedBundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: demoDist
      name: demo_rb
      version: v1.0.0

  - name: old_distributionRules
    type: DistributionRule
    configuration:
      sourceDistribution: demoDist
      serviceName: "*"
      siteName: "*"
      cityName: "*"
      countryCodes:
        - "CN"
        - "GB"

  - name: old_deploy_vm
    type: VmCluster
    configuration:
      sshKey: deploySsh
      targets:
        - 167.71.157.57

pipelines:
  - name: mark_old_service
    steps:
      - name: go_service_build
        type: Jenkins
        configuration:
          integrations:
            - name: demoJenkins
          outputResources:
            - name: svc_build_info

      - name: promote_svc_build
        type: PromoteBuild
        configuration:
          targetRepository: demo-pipelines
          integrations:
            - name: demoArt
          inputResources:
            - name: svc_build_info
          outputResources:
            - name: svc_promoted_build_info

  - name: mark_app
    configuration:
      runtime:
        type: image
        image:
          auto:
            language: java
            versions:
              - "openjdk11"
    steps:
      - name: build_war_gradlen
        type: GradleBuild
        configuration:
          gradleCommand: clean artifactoryPublish -b gradle-examples/4/gradle-example-ci-server/build.gradle --debug --stacktrace
          sourceLocation: .
          configFileLocation: gradle-examples/4/gradle-example-ci-server
          configFileName: rtgradle.yaml
          autoPublishBuildInfo: true
          inputResources:
            - name: mark_PE_gitRepo
              trigger: true
          outputResources:
            - name: war_build_info
          integrations:
            - name: beta_dev

      - name: build_war
        type: Bash
        configuration:
          inputResources:
            - name: mark_PE_gitRepo
              trigger: false
          integrations:
            - name: beta_dev
        execution:
          onStart:
            - rm -rf $run_dir/workspace/jfrog
            - retry_command jfrog rt config --url $int_beta_dev_url --user $int_beta_dev_user --apikey $int_beta_dev_apikey --interactive=false beta_dev
            - pushd $res_mark_PE_gitRepo_resourcePath
            - add_run_variables buildStepName=${step_name}
            - add_run_variables ${step_name}_buildNumber=${run_number}
            - add_run_variables ${step_name}_buildName=${pipeline_name}_${step_name}
            - cd gradle-examples/4/gradle-example-ci-server
            - ls
            - jfrog rt bce $pipeline_name $run_number
            - jfrog rt bag $pipeline_name $run_number
            - jfrog rt gradle "clean artifactoryPublish" ./rtgradle.yaml --build-name=$pipeline_name --build-number=$run_number
            - add_run_files /tmp/jfrog/. jfrog
            - jfrog rt bp $pipeline_name $run_number

      - name: build_docker_template
        type: Bash
        configuration:
          environmentVariables:
            dockerImageName: jfrog.local:5000/docker-framework
            dockerImageTag: ${run_number}
          inputResources:
            - name: mark_AF_gitRepo
              trigger: true
          integrations:
            - name: beta_dev
        execution:
          onStart:
            - dockerImageName="artifactory-dev.jfrogbeta.com/docker-local/docker-framework"             #this is to fix the bug in env vars
            - dockerImageTag=${run_number}             #this is to fix the bug in env vars
            - rm -rf $run_dir/workspace/jfrog
            - retry_command jfrog rt config --url $int_beta_dev_url --user $int_beta_dev_user --apikey $int_beta_dev_apikey --interactive=false beta_dev
            - pushd $res_mark_AF_gitRepo_resourcePath
            - add_run_variables buildStepName=${step_name}
            - add_run_variables ${step_name}_buildNumber=${run_number}
            - add_run_variables ${step_name}_buildName=${pipeline_name}_${step_name}
            - jfrog rt dl --spec=downloadspec.json --build-name=${step_name}_buildName --build-number=${step_name}_buildNumber
            - docker login -u $int_beta_dev_user -p $int_beta_dev_apikey artifactory-dev.jfrogbeta.com
            - docker build --pull --no-cache -t $dockerImageName:$dockerImageTag --build-arg REGISTRY=${int_beta_dev_url} .
            - jfrog rt bce ${step_name}_buildName ${step_name}_buildNumber
            - jfrog rt bag --config=./bag-config.yml ${step_name}_buildName ${step_name}_buildNumber
            - jfrog rt docker-push $dockerImageName:$dockerImageTag docker-local --build-name=$pipeline_name --build-number=$run_number
            - jfrog rt bp ${step_name}_buildName ${step_name}_buildNumber
            - add_run_files /tmp/jfrog/. jfrog

      - name: promote_docker_template
        type: Bash
        configuration:
          environmentVariables:
            dockerImageName: jfrog.local:5000/docker-framework
            dockerImageTag: ${run_number}
          inputResources:
            - name: mark_AF_gitRepo
              trigger: false
          integrations:
            - name: beta_dev
          inputSteps:
            - name: build_docker_template
        execution:
          onStart:
            - dockerImageTag=${run_number}
            - pushd $res_mark_AF_gitRepo_resourcePath
            - sed -E "s/@/${dockerImageTag}/" retag.json > retag_out.json
            - add_run_variables docker_retag_url=${int_beta_dev_url}/api/docker/$targetRepo/v2/promote
            - curl -u$int_beta_dev_user:$int_beta_dev_apikey ${docker_retag_url} -X POST -H 'Content-Type: application/json' -T retag_out.json

      - name: build_app
        type: Bash
        configuration:
          environmentVariables:
            dockerImageName: jfrog.local:5000/app
            dockerImageTag: ${run_number}
          inputResources:
            - name: mark_AA_gitRepo
              trigger: true
          inputSteps:
            - name: build_war
            - name: build_war_gradlen
            - name: promote_docker_template
          integrations:
            - name: beta_dev
        execution:
          onStart:
            - dockerImageName="artifactory-dev.jfrogbeta.com/docker-local/docker-app"             #this is to fix the bug in env vars
            - dockerImageTag=${run_number}             #this is to fix the bug in env vars
            - rm -rf $run_dir/workspace/jfrog
            - retry_command jfrog rt config --url $int_beta_dev_url --user $int_beta_dev_user --apikey $int_beta_dev_apikey --interactive=false beta_dev
            - pushd $res_mark_AA_gitRepo_resourcePath
            - add_run_variables buildStepName=${step_name}
            - add_run_variables ${step_name}_buildNumber=${run_number}
            - add_run_variables ${step_name}_buildName=${pipeline_name}_${step_name}
            - jfrog rt dl --spec=downloadspec.json --build-name=${step_name}_buildName --build-number=$run_number
            - docker login -u $int_beta_dev_user -p $int_beta_dev_apikey artifactory-dev.jfrogbeta.com
            - docker build --pull --no-cache -t $dockerImageName:$dockerImageTag --build-arg REGISTRY=${int_beta_dev_url} .
            - jfrog rt bce ${step_name}_buildName $run_number
            - jfrog rt bag --config=./bag-config.yml ${step_name}_buildName $run_number
            - jfrog rt docker-push $dockerImageName:$dockerImageTag docker-local --build-name=$pipeline_name --build-number=$run_number
            - jfrog rt bp ${step_name}_buildName $run_number
            - add_run_files /tmp/jfrog/. jfrog

      - name: publish_app_build
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: build_app
          outputResources:
            - name: markg_app_build_info

      - name: promote_app_build
        type: PromoteBuild
        configuration:
          targetRepository: demo-pipelines
          integrations:
            - name: demoArt
          inputResources:
            - name: markg_app_build_info
          outputResources:
            - name: markg_app_promoted_build_info

  - name: mark_old_release
    steps:
      - name: bundle
        type: CreateReleaseBundle
        configuration:
          releaseBundleName: demo_rb
          releaseBundleVersion: v1.0.$run_number
          dryRun: false
          sign: false
          description: "some random test description"
          inputResources:
            - name: svc_promoted_build_info
              trigger: false
            - name: app_promoted_build_info
              trigger: false
          outputResources:
            - name: releaseBundle
          releaseNotes:
            syntax: markdown
            content: |
              ## Heading
                * Bullet
                * Points

      - name: sign
        type: SignReleaseBundle
        configuration:
          inputResources:
            - name: releaseBundle
          outputResources:
            - name: signedBundle

      - name: distribute
        type: DistributeReleaseBundle
        configuration:
          dryRun: false
          inputResources:
            - name: signedBundle
            - name: distributionRules

      - name: deploy
        type: Bash
        configuration:
          environmentVariables:
            docker_repository: demo-pipelines
            artifactory_address: jfrog.local:5000
          integrations:
            - name: demoEdge
          inputResources:
            - name: deploy_vm
            - name: svc_promoted_build_info
              trigger: false
            - name: app_promoted_build_info
              trigger: false
          inputSteps:
            - name: distribute
        execution:
          onExecute:
            - ssh -i ~/.ssh/deploy_vm root@${res_deploy_vm_targets_0} sudo /root/deploy-to-prod.sh $artifactory_address $docker_repository $int_demoEdge_apikey $res_app_promoted_build_info_buildNumber $res_svc_promoted_build_info_buildNumber
